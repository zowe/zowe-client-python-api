"""Zowe Python Client SDK.

This program and the accompanying materials are made available under the terms of the
Eclipse Public License v2.0 which accompanies this distribution, and is available at

https://www.eclipse.org/legal/epl-v20.html

SPDX-License-Identifier: EPL-2.0

Copyright Contributors to the Zowe Project.
"""
from .request_handler import RequestHandler
from .constants import constants


class ZosmfApi:
    """
    Abstract class for z/OSMF API classes.

    ...

    Attributes
    ----------
    connection
        zosmf connection object
    default_service_url
        rest api default endpoint
    constants
        zowe client sdk constants
    default_headers
        default z/osmf request headers
    request_endpoint
        full request endpoint
    request_arguments
        default python request arguments
    session_arguments
        zowe sdk default session arguments
    request_handler
        request handler object

    Methods
    -------
    create_custom_request_arguments
        Creates a new custom request arguments dictionary
    """

    def __init__(self, connection, default_url):
        """
        Construct a ZosmfAPI object.

        Notice that since this is an abstract class it should never be
        directly implemented. This constructor will only be called by
        the child classes.

        Parameters
        ----------
        connection
            The z/OSMF connection object (generated by the ZoweSDK object)
        default_url
            The base default endpoint url used by the REST API
        """
        self.connection = connection
        self.constants = constants
        self.default_service_url = default_url
        self.default_headers = {
            "Content-type": "application/json",
            "X-CSRF-ZOSMF-HEADER": "",
        }
        self.request_endpoint = "https://{base_url}{service}".format(
            base_url=self.connection.zosmf_host, service=self.default_service_url
        )
        self.request_arguments = {
            "url": self.request_endpoint,
            "auth": (self.connection.zosmf_user, self.connection.zosmf_password),
            "headers": self.default_headers,
        }
        self.session_arguments = {
            "verify": self.connection.ssl_verification,
            "timeout": 30,
        }
        self.request_handler = RequestHandler(self.session_arguments)

    def create_custom_request_arguments(self):
        """Create a copy of the default request arguments dictionary.

        This method is required because the way that Python handles
        dictionary creation
        """
        return self.request_arguments.copy()
